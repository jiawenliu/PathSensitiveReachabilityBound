#line 121
  count = (u_int8_t )0;
#line 121
  while ((int )count < 255) {
#line 123
    tmp = malloc(sizeof(queue_test_t ));
#line 123
    qt = (queue_test_t *)tmp;
#line 124
    if ((unsigned long )qt == (unsigned long )((void *)0)) {
#line 126
      return ((status_t )12);
    }
#line 129
    bzero((void *)qt, sizeof(queue_test_t ));
#line 131
    qt->addr1 = (u_int32_t )qt;
#line 132
    qt->addr2 = (u_int32_t )count;
#line 134
    status = queue_enqueue(q, & qt->link);
#line 135
    if (status != 0U) {
#line 137
      return (status);
    }
#line 121
    count = (u_int8_t )((int )count + 1);
  }


#line 141
  count = (u_int8_t )0;
#line 141
  while ((int )count < 255) {
#line 143
    tmp___0 = queue_dequeue(q, & status);
#line 143
    qt = (queue_test_t *)tmp___0;
#line 144
    if ((unsigned long )qt == (unsigned long )((void *)0)) {
#line 146
      return (status);
    }
#line 149
    if (qt->addr2 != (u_int32_t )count) {
#line 151
      return ((status_t )2);
    } else {
#line 155
      free((void *)qt);
    }
#line 141
    count = (u_int8_t )((int )count + 1);
  }



#line 181
  count = (u_int8_t )0;
#line 181
  while ((int )count < 33) {
#line 183
    tmp = malloc(sizeof(queue_test_t ));
#line 183
    qt = (queue_test_t *)tmp;
#line 184
    if ((unsigned long )qt == (unsigned long )((void *)0)) {
#line 186
      return ((status_t )12);
    }
#line 189
    bzero((void *)qt, sizeof(queue_test_t ));
#line 191
    qt->addr1 = (u_int32_t )qt;
#line 192
    qt->addr2 = (u_int32_t )count;
#line 194
    status = queue_enqueue(q, & qt->link);
#line 195
    if (status != 0U) {
#line 197
      return (status);
    }
#line 181
    count = (u_int8_t )((int )count + 1);
  }


#line 203
  count = (u_int8_t )0;
#line 203
  while ((size_t )count < q_count * 2UL) {
#line 205
    tmp___0 = queue_get_next(q, & qt->link, & status);
#line 205
    next_qt = (queue_test_t *)tmp___0;
#line 206
    if ((unsigned long )next_qt == (unsigned long )((void *)0)) {
#line 207
      next_qt = qt;
    }
#line 210
    if ((unsigned long )qt != (unsigned long )((void *)0)) {
#line 211
      printf((char const   * __restrict  )"curr[0x%x][%d] next[0x%x][%d]\n", qt->addr1,
             qt->addr2, next_qt->addr1, next_qt->addr2);
    }
#line 215
    if (status == 16U) {
#line 220
      printf((char const   * __restrict  )"End of List, Starting over from the top\n");
#line 221
      qt = (queue_test_t *)((void *)0);
#line 222
      goto __Cont;
    }
#line 225
    qt = next_qt;
    __Cont: /* CIL Label */ 
#line 203
    count = (u_int8_t )((int )count + 1);
  }

#line 225
  element = itable->itable_element[*index___0];
#line 226
  *index___0 = (u_int16_t )((int )*index___0 + 1);
#line 227
  while ((unsigned long )element == (unsigned long )((void *)0)) {
#line 228
    if ((int )*index___0 >= (int )itable->length) {
#line 229
      element = (void *)0;
#line 230
      *status = (status_t )28;
#line 231
      break;
    }
#line 233
    element = itable->itable_element[*index___0];
#line 234
    *index___0 = (u_int16_t )((int )*index___0 + 1);
  }
