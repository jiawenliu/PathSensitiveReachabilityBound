#242
[ islot <- 0 ] 0;
while [ < (islot, maxthreads) ] 1 do {
    [ islot <- + (islot, 1) ] 2;
	[ qs <- c.pool ] 3;
	if [ != (pthread_mutex_init, 0) ] 4
	then { [ islot <- maxthreads ] 5 }
	else { [ skip ] 6 };
	
	if [ != (pthread_cond_init, 0) ] 7
	then { [ islot <- maxthreads ] 8 }
	else { [ skip ] 9 };
	
	[ qs_st <- ts_idle ] 10;
	[ qs_common <- c ] 11;
	if [ != (pthread_create, 0) ] 12
	then { [ islot <- maxthreads ] 13 }
	else { [ skip ] 14 }

}

#322
[ i <- 0 ] 0;
while [ < (i, c_nthreads) ] 1 do {
    [ i <- + (i, 1) ] 2;
	if [ == (c_pool_st, ts_idle) ] 3
	then { [ c_idlethreads <- - (c_idlethreads, 1) ] 4
           [ c_pool_st <- ts_work ] 5;
		   [ i <- c_nthreads ] 6;
	      }
	else { [ skip ] 7 }
	
}

#391
[ r <- CMP_thunk ] 0;
while [ &( <= (pb, pc), <= (r, 0) ) ] 1 do {	
	if [ == (r, 0) ] 2
	then { 
	[ t <- pa] 3;
	[ pa <- pb] 4;
	[ pb <- t] 5;
	[ pa <- + (pa, es) ] 6; 
	}
	else { [ skip ] 7 };
	[ pb <- + (pb, es) ]8
}



#622
[ i <- 0 ] 0;
while [ < (i, nelem) ] 1 do {
	[ i <- + (i, 1) ] 2;
	if [ == (asprintf, -1) ] 3
	then { [ i <- nelem ] 4 }
	else { [ skip ] 5}
}

#652
[ i <- 1] 0;
while [ < (i, nelem) ] 1 do {
	[ i <- + (i, 1) ] 2;
	if [ > (int_elem_i1, int_elem_i) ] 3
	then { [ i <- nelem ] 4 }
	else { [ skip ] 5}
}

#488
[ i <- 0 ] 0;
while [ < (i, c_nthreads) ] 1 do {
    [ i <- + (i, 1) ] 2;
	[ qs2 <- c_pool_i ] 3;
	if [ == (qs2, qs) ] 4
	then { [ skip ] 5 }
	else { [qs2_st <- ts_term ] 6 }
}








