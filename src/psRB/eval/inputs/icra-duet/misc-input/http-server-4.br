[ t <- 1] 0;
while [ > ( t, 0 ) ] 1 do {
	[ numByteRecv <- recv_cilentSockert ] 2;
	if [ < (numByteRecv, 0) ] 3
	then { [ t <- 0 ]  4 }
	else {
		[ totalByte <- (totalByte, numByteRecv) ] 5;
		if [ >= (totalByte, 2) ] 6
		then {
			[ m <- - (totalByte, 1) ] 7;
			[ n <- + (buffer, m) ] 8;
			if [ == (n, 10) ] 9
			then {
				if [ == (- (n, 1), 13)] 10
				then { [ t <- 0 ] 11 }
				else {
					[ curBuffer <- + (curBuffer, numByteRecv) ] 12;
					[ curBufferLen <- - (curBufferLen, numByteRecv) ] 13	
				}
			}
			else {
				[ curBuffer <- + (curBuffer, numByteRecv) ] 14;
				[ curBufferLen <- - (curBufferLen, numByteRecv) ] 15			
			}	
		}
		else {
			[ curBuffer <- + (curBuffer, numByteRecv) ] 16;
			[ curBufferLen <- - (curBufferLen, numByteRecv) ] 17		
		}
	};
	if [ == (numByteRecv, 0) ] 18
	then { [ t <- 0 ] 19 }
	else { [ skip ] 20 }

}