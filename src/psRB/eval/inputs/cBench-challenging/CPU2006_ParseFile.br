[num_errors <- 0] 0;
[num_errors <- 0] 1;
[intoken <- 0] 2; 
[lineno <- 0] 3;
while [ < (c, FileSize) ] 4 do
  {
    [ c <- + ( c, 1 ) ] 5;
    while [ && (< (c, FileSize), rand) ] 6
    do
    {
      [ c <- + ( c, 1 ) ] 7
    };
    [ lineno <- + ( lineno, 1 ) ] 8;
    [ c <- + ( c, 1 ) ] 9
  };
  if [ rand ] 10
  then
  {
    if [ == (intoken, 1) ] 11
    then 
    {
  	  [ num_errors <- + ( num_errors, 1) ] 12;
      [intoken <- 0] 13
    }
    else { [ lineno <- + ( lineno, 1 ) ] 14 }
  }
  else { [ skip ] 15 };

  if [ == (intoken , 1 )] 16
  then
  {
    [ intoken <- + (intoken, 1) ] 17;
    if [ > (intoken, BUF_SZ) ] 18
    then { [ skip ] 19  }
    else { [ skip ] 20 }
  }
  else { [ skip ] 21 };

  if [ rand ] 22
  then 
  {
    [ intoken <- 0 ] 23 ;
    [ intoken <- + (intoken, 1) ] 24
  }
  else { [ skip ] 25 };

  if [ == (intoken , 1 )] 26
    then 
    {
      [intoken <- 0] 27;
      [inval <- 0] 28 ;
      [i <- intoken] 29 ;
      while [ > (i, 0) ] 30  do
      {
        [ i <- - ( i, 1 ) ] 31
      };
      [ ntokens <- 1 ] 32 ;
      [ll <- intoken ] 33 ;
      while [ > (ll, 0) ] 34 do
      {
        [ ll <- - ( ll, 1 ) ] 35;
        if [ rand ] 36
        then 
        { [ntokens <- + (ntokens, 1)] 37 }
        else { [ skip ] 38}
      };
      while [ < (c, FileSize) ] 39 do
      {
        [ c <- + ( c, 1 ) ] 40;
        [ lineno <- + ( lineno, 1 ) ] 41
      };

      if [ rand ] 42
      then 
      {
        [p <- 0] 43;
        if [ > (ntokens, 1) ] 44
        then {
          [ skip ] 45
        }
        else { [ skip ] 46 };

        while [ < (c, FileSize) ] 47 do
        { [ c <- + ( c, 1 ) ] 48 ;
          [ p <- + ( p, 1 ) ] 49 ;
          [ lineno <- + ( lineno, 1 ) ] 50;
          if [ > (p, BUF_SZ) ] 51 
          then 
          {
          [ skip ] 52
          }
          else { [ skip ] 53 }
        }
      }
      else 
      {   
      if [ rand ] 54
      then {
            while [ < (c,  FileSize)] 55 do
            {
              [ c <- + ( c, 1 ) ] 56
            }
          }
      else
      {
        [p <- 0] 57 ;
        [ p <- + ( p, 1 ) ] 58;
        if [ == (ntokens, 1)] 59
        then {
            [ c <- + ( c, 1 ) ] 60;
            while [ < (c, FileSize)] 61
            do 
            {
              [ p <- + ( p, 1 ) ] 62 ;
              if [ > (p, BUF_SZ) ] 63
              then { [ skip ] 64 }
              else { [ skip ] 65 } ;
              [ c <- + ( c, 1 ) ] 66
            };
            [ lineno <- + ( lineno, 1 ) ] 67
          }
        else
        {
          [ ncommas <- 0 ] 68;
          [ pp <- 0 ] 69 ;
          [ pp <- + ( pp, 1 ) ] 70;
          [ c <- + ( c, 1 ) ] 71 ;
            while [ && ( < (ncommas, ntokens),  <  (c, FileSize))] 72
            do 
            {
              [ pp <- + ( pp, 1 ) ] 73;
              if [ > (pp, BUF_SZ) ] 74
              then { [ skip ] 75 }
              else { [ skip ] 76 };
              [ ncommas <- + (ncommas, 1) ] 77;
              [ c <- + ( c, 1 ) ] 78
            };
            while [ < (c, FileSize) ] 79 do
            {
              [ c <- + ( c, 1 ) ] 80 ;
              [ lineno <- + ( lineno, 1 ) ] 81
            };
            [ pp <- + ( pp, 1 ) ] 82;
          
            if[ > (p, BUF_SZ) ] 83 
              then { [ skip ] 84 }
              else { [ skip ] 85 };
            [ c <- + ( c, 1 ) ] 86;
            while [ < (c, FileSize) ] 87 do
            {
              [ pp <- + ( pp, 1 ) ] 88 ;
              if [ > ( pp, BUF_SZ ) ] 89
              then { [ skip ] 90 }
              else { [ skip ] 91 };
              [ c <- + ( c, 1 ) ] 92
                    };
                    [pt <- 0] 93;
                    [pv <- 0] 94;
                    [i <- ncommas] 95;
                while [ > (i, 0) ] 96 do
              {
                  [ i <- - ( i, 1 ) ] 97;          
                  [ pp <- 0 ] 98;
                  while [ rand ] 99 do
                  {
                      [ pp <- + ( pp, 1 ) ] 100; 
                      [ pp <- pp ] 101; 
                      [ pt <- + (pt, 1) ] 102;
                      if [ > ( pp, BUF_SZ ) ] 103
                      then { [ skip ] 104 }
                    else { [ skip ] 105 }
                  };
                    [pp <- 0] 106 ;
                    while [ rand ] 107 do
                    {
                      [ pp <- + ( pp, 1 ) ] 108;
                      [ pv <- + ( pv, 1 ) ] 109;
                      if [ > ( pp, BUF_SZ ) ] 110
                      then { [ skip ] 111 }
                      else { [ skip ] 112 }
                    };
                    [ pv <- + ( pv, 1 ) ] 113 ; 
                    [ pt <- + ( pt, 1 ) ] 114 
                };
                [pp <- 0] 115 ;
                while [ rand ] 116 do
                {
                    [ pp <- + ( pp, 1 ) ] 117;
                    [ pt <- + ( pt, 1 ) ] 118;
                  if [ > ( pp, BUF_SZ ) ] 119
                    then { [ skip ] 120 }
                    else { [ skip ] 121 }
                };
                [pp <- 0] 122 ;
                while [ rand ] 123 do
                {
                  [ pp <- + ( pp, 1 ) ] 124 ;
                  if [ > ( pp, BUF_SZ ) ] 125 
                  then { [ skip ] 126 }
                  else { [ skip ] 127 };
                  [ pv <- + ( pv, 1 ) ] 128
                }
        }
      }
    }
  }
  else { [ skip ] 129 }

